\input texinfo   @c -*-texinfo-*-

@c %**start of header
@setfilename jpp.info
@settitle jpp
@afourpaper
@documentencoding UTF-8
@documentlanguage en
@finalout
@c %**end of header


@c @defindex op
@c @synindex op vr
@c @synindex cp pg


@copying
This manual is for jpp.

Copyright @copyright{} 2012, 2013 Mattias Andrée

@quotation
Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.3 or
any later version published by the Free Software Foundation; with no
Invariant Sections, with no Front-Cover Texts, and with no Back-Cover
Texts. A copy of the license is included in the section entitled
``GNU Free Documentation License''.
@end quotation
@end copying


@ifnottex
@node Top
@top jpp
@insertcopying
@end ifnottex

@titlepage
@title jpp 4
@subtitle Bash based preprocessor for Java
@author Mattias Andrée, maandree@@member.fsf.org
@page
@vskip 0pt plus 1filll
@insertcopying
@page
@*@*
@center `You're going to @b{love me!}'
@end titlepage

@contents


@menu
* Overview::                        Overview of @command{jpp}
* License of jpp::                  Summary of the license of the program
* GNU General Public License::      The license of the program
* GNU Free Documentation License::  The license of this manual
* Concept index::                   Concept index
@end menu



@node Overview
@chapter Overview
@cindex overview
@cindex description

@command{jpp} is simple, at least if you know GNU Bash,
or just POSIX shell.

Add lines beginning with @code{#} in your Java files,
shebangs are ignored, the rest consists of directives
coded in GNU Bash. An example is located in @file{test/},
if you have the source code. Files named @file{.jpp} at
the eed will be renamed to end with @file{.java}.

In addition to @code{#} lines, variables can be included
in a Java code line by placing the name inside dollar
signes inside double quotes that are in turn in sharp
angle brackets. Like this: @code{<''$VARIABLE$''>}.
@code{<''>} is treated as @code{//}.

Variables are specified when running @command{jpp} by
@option{-D} (also known as @option{--export}) options,
the argument should be as if declared in Bash, the code
argument actually just pasted. Just setting a name in
the argument is mote and cannot be used to declare
boolean variables as true.


@node License of jpp
@appendix License of jpp

@flushleft
jpp – Bash based preprocessor for Java

Copyright © 2012, 2013  Mattias Andrée (maandree@@member.fsf.org)

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
@end flushleft

@node GNU General Public License
@appendix GNU General Public License
@include gpl.texinfo

@node GNU Free Documentation License
@appendix GNU Free Documentation License
@include fdl.texinfo

@node Concept index
@appendix Concept index
@printindex cp

@c @node Concept and program index
@c @appendix Concept and program index
@c @printindex pg

@c @node Variable and option index
@c @appendix Variable and option index
@c @printindex vr


@bye

